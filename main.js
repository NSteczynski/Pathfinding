!function(e){function t(t){for(var n,i,r=t[0],l=t[1],d=t[2],p=0,c=[];p<r.length;p++)i=r[p],Object.prototype.hasOwnProperty.call(s,i)&&s[i]&&c.push(s[i][0]),s[i]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n]);for(u&&u(t);c.length;)c.shift()();return a.push.apply(a,d||[]),o()}function o(){for(var e,t=0;t<a.length;t++){for(var o=a[t],n=!0,r=1;r<o.length;r++){var l=o[r];0!==s[l]&&(n=!1)}n&&(a.splice(t--,1),e=i(i.s=o[0]))}return e}var n={},s={0:0},a=[];function i(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=n,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(o,n,function(t){return e[t]}.bind(null,n));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var r=window.webpackJsonp=window.webpackJsonp||[],l=r.push.bind(r);r.push=t,r=r.slice();for(var d=0;d<r.length;d++)t(r[d]);var u=l;a.push([4,1]),o()}([,function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Capitalize=e=>e.charAt(0).toUpperCase()+e.slice(1,e.length).toLowerCase(),t.getMaxRows=()=>Math.floor(window.innerHeight/40)<2?2:Math.floor(window.innerHeight/40),t.getMaxColumns=()=>Math.floor(window.innerWidth/40)<4?4:Math.floor(window.innerWidth/40),t.getNodeStartPosition=(e,t)=>({x:Math.floor(e/4),y:Math.floor(t/2)}),t.getNodeEndPosition=(e,t)=>({x:Math.floor(e/4*3),y:Math.floor(t/2)})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.DIJKSTRA="dijkstra"}(t.Algorithms||(t.Algorithms={})),function(e){e.UNVISITED="unvisited",e.VISITED="visited",e.WALL="wall",e.START="start",e.END="end",e.PATH="path"}(t.NodeTypes||(t.NodeTypes={}))},,function(e,t,o){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t.default=e,t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(o(0)),i=n(o(6)),r=s(o(10));o(18),i.render(a.createElement(r.default,null),document.getElementById("app"))},,,,,,function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(o(0)),a=n(o(11)),i=n(o(14)),r=n(o(15)),l=n(o(16)),d=o(17),u=o(2),p=o(1);t.default=()=>{const[e,t]=s.default.useState(d.defaultSettings),[o,n]=s.default.useState({}),[c,f]=s.default.useState(d.defaultBoardMouseEvents);s.default.useEffect(()=>(window.addEventListener("resize",g),window.addEventListener("mousedown",m),window.addEventListener("mouseup",h),()=>{window.removeEventListener("resize",g),window.removeEventListener("mousedown",m),window.removeEventListener("mouseup",h)}),[]),s.default.useEffect(()=>{const o=p.getNodeStartPosition(e.columns,e.rows),s=p.getNodeEndPosition(e.columns,e.rows),a={};for(let t=0;t<e.columns;++t)for(let o=0;o<e.rows;++o)a[`${t}-${o}`]={type:u.NodeTypes.UNVISITED,position:{x:t,y:o}};t(e=>Object.assign(Object.assign({},e),{startNode:o,endNode:s,isPlaying:!1})),n(a)},[e.rows,e.columns]),s.default.useEffect(()=>{if(!e.isPlaying)return;const t=y(),[o,s]=l.default(t,e.rows,e.columns,e.startNode,e.endNode),a=d.AlgorithmInterval/e.playingSpeed;for(let e=0,t=o.length;e<t;++e)setTimeout(()=>x(o[e].position,o[e].type),a*e);for(let e=0,t=s.length;e<t;++e)setTimeout(()=>x(s[e].position,s[e].type),a*(o.length+e));setTimeout(()=>b("isPlaying",!1),a*(o.length+s.length)),n(t)},[e.isPlaying]);const g=()=>{const e=p.getMaxRows(),o=p.getMaxColumns();t(t=>Object.assign(Object.assign({},t),{rows:e,maxRows:e,columns:o,maxColumns:o}))},b=(o,n)=>t(Object.assign(Object.assign({},e),{[o]:n})),h=()=>f(e=>Object.assign(Object.assign({},e),d.defaultBoardMouseEvents)),m=()=>f(e=>Object.assign(Object.assign({},e),{isMouseDown:!0})),y=()=>{const e=Object.assign({},o),t=Object.keys(e);for(let o=0,n=t.length;o<n;++o)e[t[o]].type!==u.NodeTypes.VISITED&&e[t[o]].type!==u.NodeTypes.PATH||(e[t[o]].type=u.NodeTypes.UNVISITED);return e},x=(e,t)=>{const s=`${e.x}-${e.y}`;null!=o[s]&&n(e=>Object.assign(Object.assign({},e),{[s]:Object.assign(Object.assign({},o[s]),{type:t})}))};return s.default.createElement(s.default.Fragment,null,s.default.createElement(a.default,Object.assign({},e,{onChange:b,onPathClear:()=>{const e=y();n(e)}})),s.default.createElement(i.default,{items:u.NodeTypes}),s.default.createElement(r.default,Object.assign({},e,{nodes:o,onStartNode:()=>f(e=>Object.assign(Object.assign({},e),{isNodeStartDown:!0})),onEndNode:()=>f(e=>Object.assign(Object.assign({},e),{isNodeEndDown:!0})),onNodeDown:t=>{if(e.isPlaying)return;const n=`${t.x}-${t.y}`,s=o[n].type;return s===u.NodeTypes.UNVISITED?x(t,u.NodeTypes.WALL):s===u.NodeTypes.WALL?x(t,u.NodeTypes.UNVISITED):void 0},onNodeOver:t=>{if(!c.isMouseDown||e.isPlaying)return;const n=`${t.x}-${t.y}`,s=o[n].type;return!c.isNodeStartDown&&!c.isNodeEndDown||s!==u.NodeTypes.WALL?c.isNodeStartDown&&s!==u.NodeTypes.WALL?b("startNode",t):c.isNodeEndDown&&s!==u.NodeTypes.WALL?b("endNode",t):s===u.NodeTypes.UNVISITED?x(t,u.NodeTypes.WALL):s===u.NodeTypes.WALL?x(t,u.NodeTypes.UNVISITED):void 0:void 0}})))}},function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(o(0)),a=n(o(12)),i=n(o(13)),r=o(2);t.default=({rows:e,maxRows:t,columns:o,maxColumns:n,playingSpeed:l,isPlaying:d,algorithm:u,onChange:p,onPathClear:c})=>s.default.createElement("div",{className:"header"},s.default.createElement(a.default,{name:"rows",label:`Rows (2 - ${t})`,value:e,min:2,max:t,step:1,disabled:d,onChange:p}),s.default.createElement(a.default,{name:"columns",label:`Columns (4 - ${n})`,value:o,min:4,max:n,step:1,disabled:d,onChange:p}),s.default.createElement(a.default,{name:"playingSpeed",label:"Animation speed (0.5 - 2.0)",value:l,min:.5,max:2,step:.25,disabled:d,onChange:p}),s.default.createElement(i.default,{name:"algorithm",label:"Algorithm",value:u,options:r.Algorithms,disabled:d,onChange:p}),s.default.createElement("button",{onClick:()=>p("isPlaying",!0),disabled:d},"Play"),s.default.createElement("button",{onClick:c,disabled:d},"Clear Path"))},function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(o(0));t.default=({name:e,label:t,value:o,min:n,max:a,step:i,disabled:r,onChange:l})=>s.default.createElement("div",{className:"field"},s.default.createElement("label",null,t),s.default.createElement("input",{type:"number",value:o,onChange:t=>{const o=parseFloat(t.currentTarget.value)||n;l(e,o<n?n:o>a?a:o)},onFocus:e=>e.currentTarget.select(),step:i,disabled:r}))},function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(o(0)),a=o(1);t.default=({name:e,label:t,value:o,options:n,disabled:i,onChange:r})=>{const[l,d]=s.default.useState(!1),u=s.default.useRef(null);s.default.useEffect(()=>(window.addEventListener("click",p),()=>window.removeEventListener("click",p)),[]);const p=e=>{let t=e.target;for(;t;){if(t==u.current)return;t=t.parentElement}d(!1)},c=Object.keys(n).map(t=>{const i=n[t]===o?"active":"";return s.default.createElement("li",{key:t,className:i,onClick:()=>r(e,n[t])},a.Capitalize(n[t]))}),f="select"+(i?" disabled":"")+(l?" open":"");return s.default.createElement("div",{className:"field"},s.default.createElement("label",null,t),s.default.createElement("div",{className:f},s.default.createElement("p",{ref:u,onClick:()=>!i&&d(!l)},a.Capitalize(o)),s.default.createElement("ul",null,c)))}},function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(o(0)),a=o(1);t.default=({items:e})=>{const t=Object.keys(e).map(t=>s.default.createElement("span",{key:t,className:e[t]},a.Capitalize(e[t])));return s.default.createElement("div",{className:"legend"},t)}},function(e,t,o){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(o(0));t.default=({nodes:e,rows:t,columns:o,startNode:n,endNode:a,isPlaying:i,onStartNode:r,onEndNode:l,onNodeDown:d,onNodeOver:u})=>{const p="board"+(i?" disabled":""),c=[];if(Object.keys(e).length)for(let i=0;i<t;++i){const t=[];for(let p=0;p<o;++p){const o=`${p}-${i}`;null!=e[o]&&(p===n.x&&i===n.y?t.push(s.default.createElement("span",{key:o,className:"start",onMouseDown:r})):p===a.x&&i===a.y?t.push(s.default.createElement("span",{key:o,className:"end",onMouseDown:l})):t.push(s.default.createElement("span",{key:o,className:e[o].type,onMouseDown:()=>d(e[o].position),onMouseOver:()=>u(e[o].position)})))}c.push(s.default.createElement("div",{key:`row-${i}`,className:"row"},t))}return s.default.createElement("div",{className:p},c)}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(2),s=e=>{if(!e.parent)return[e];return s(e.parent).concat([e])},a=(e,t,o,s)=>{const a=[],i=`${s.position.x}-${s.position.y-1}`;s.position.y-1>=0&&e[i].type===n.NodeTypes.UNVISITED&&a.push({position:e[i].position,parent:s});const r=`${s.position.x+1}-${s.position.y}`;s.position.x+1<o&&e[r].type===n.NodeTypes.UNVISITED&&a.push({position:e[r].position,parent:s});const l=`${s.position.x}-${s.position.y+1}`;s.position.y+1<t&&e[l].type===n.NodeTypes.UNVISITED&&a.push({position:e[l].position,parent:s});const d=`${s.position.x-1}-${s.position.y}`;return s.position.x-1>=0&&e[d].type===n.NodeTypes.UNVISITED&&a.push({position:e[d].position,parent:s}),a};t.default=(e,t,o,i,r)=>{const l=a(e,t,o,{position:i}),d=l.map(e=>({type:n.NodeTypes.VISITED,position:e.position})),u={position:r};for(;l.length;){const s=l.shift(),i=a(e,t,o,s);for(let e=0,t=i.length;e<t;++e){const t=i[e];if(!d.find(e=>e.position.x===t.position.x&&e.position.y===t.position.y)){if(t.position.x===r.x&&t.position.y===r.y){u.parent=t.parent,l.length=0;break}d.push({type:n.NodeTypes.VISITED,position:t.position}),l.push(t)}}}return[d,(u?s(u):[]).map(e=>({type:n.NodeTypes.PATH,position:e.position}))]}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(2),s=o(1),a=s.getMaxRows(),i=s.getMaxColumns(),r=s.getNodeStartPosition(i,a),l=s.getNodeEndPosition(i,a);t.defaultSettings={rows:a,maxRows:a,columns:i,maxColumns:i,startNode:r,endNode:l,playingSpeed:1,isPlaying:!1,algorithm:n.Algorithms.DIJKSTRA},t.AlgorithmInterval=100,t.defaultBoardMouseEvents={isMouseDown:!1,isNodeStartDown:!1,isNodeEndDown:!1}},function(e,t,o){var n=o(19),s=o(20);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var a={insert:"head",singleton:!1},i=(n(s,a),s.locals?s.locals:{});e.exports=i},,function(e,t,o){(t=o(21)(!1)).push([e.i,".board{width:100%;flex-grow:1;display:flex;flex-wrap:wrap;justify-content:center}.board>.row{display:flex;flex-direction:row;width:100%;flex-grow:1}.board>.row>span{width:100%;height:100%;border:1px solid #fff;user-select:none}.board>.row>span:hover{cursor:pointer}.board>.row>span.visited{background:#55146e}.board>.row>span.wall{background:#a7a6a6}.board>.row>span.start{background:#108b6d;transition:none}.board>.row>span.checkpoint{background:#18479e}.board>.row>span.end{background:#911e1e;transition:none}.board>.row>span.path{background:#c9bc09}.board.disabled>.row>span:hover{cursor:auto}.header{display:flex;flex-direction:row;padding:10px;background:#181818;border-bottom:1px solid #fff}.header>button{background:transparent;border:1px solid #fff;color:rgba(255,255,255,0.8);outline:none;font-size:20px;padding:10px;margin:0px 5px}.header>button:hover{background:#1f1f1f;cursor:pointer}.header>button:focus{background:#2c2c2c}.header>button:disabled{background:transparent;color:rgba(255,255,255,0.368627);border-color:rgba(255,255,255,0.368627)}.header>button:disabled:hover{cursor:auto}.legend{display:flex;flex-direction:row;margin:20px}.legend>span:not(:first-child){border-left:1px solid #fff}.legend>span:not(:last-child){border-right:1px solid #fff}.legend>span{display:block;color:rgba(255,255,255,0.8);font-size:24px;padding:5px 10px;width:100%;display:flex;align-items:center;justify-content:center;position:relative}.legend>span.disabled{text-decoration:line-through;color:#df6363}.legend>span:before{content:'';display:block;width:40px;height:40px;margin-right:10px;border:1px solid #fff}.legend>span.visited:before{background:#55146e}.legend>span.wall:before{background:#a7a6a6}.legend>span.start:before{background:#108b6d}.legend>span.end:before{background:#911e1e}.legend>span.path:before{background:#c9bc09}@media only screen and (max-width: 1023px){.legend{margin:10px}.legend>span{font-size:18px}.legend>span:before{width:25px;height:25px}}@media only screen and (max-width: 767px){.legend{margin:2.5px 5px}.legend>span{font-size:16px}.legend>span:before{width:20px;height:20px}}.field{position:relative;margin:10px}.field>label{position:absolute;top:-15px;color:rgba(255,255,255,0.368627);font-size:12px}.field:before{content:'';position:absolute;bottom:0px;left:0px;width:100%;border-bottom:1px solid #fff}input{background:transparent;border:none;color:rgba(255,255,255,0.8);height:100%;outline:none;width:200px;font-size:18px}input:disabled{color:rgba(255,255,255,0.368627)}.select{color:rgba(255,255,255,0.8);font-size:18px;position:relative}.select>p{width:200px;margin:0px}.select>p:hover{cursor:pointer}.select>ul{position:absolute;z-index:1000;top:25px;left:0px;margin:0px;padding:0px;overflow:hidden;height:0px;width:100%;background:#121212;transition:none}.select>ul>li{padding:5px 10px;border-left:1px solid #fff;border-right:1px solid #fff;border-bottom:1px solid #fff}.select>ul>li:first-child{border-top:1px solid #fff}.select>ul>li:hover{cursor:pointer;background:#2c2c2c}.select>ul>li.active{background:#383838}.select.open>ul{height:auto}.select.disabled>p{color:rgba(255,255,255,0.368627)}.select.disabled>p:hover{cursor:auto}*,*:before,*:after{box-sizing:border-box;font-family:roboto;transition:all .3s}body{margin:0px;padding:0px;width:100vw;height:100vh;overflow:hidden;background:#121212;transition:none}body>#app{display:flex;flex-direction:column;width:100%;height:100%}\n",""]),e.exports=t}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,